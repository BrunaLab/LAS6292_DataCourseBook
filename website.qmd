# Editing the Herbvar Website


The [HerbVar website](https://herbvar.org/index.html) has been created in R so you can simply be added to his repository\* (\* = note the website is not part of the HerbVar Network GitHub organization so you will need to separately gain access to this repository) and make modifications via R (which is easier than needing to learn how to code up a website from scratch and/or in another coding language).

1.  Visit the website’s repository (link) and either connect it your computer or fork the repository into your own Git account.

-   I (Nick) forked the repository so that my pushes would be preserved as “pull requests” and could be reviewed by Will before actually changing the website on the internet but this may be unnecessary depending on your comfortability with this type of coding

2.  Make whatever changes Will asked for

-   Each page of the website is saved as a separate .Rmd file and file names mostly correspond to website tab names so it should be relatively easy to identify which script(s) needs to be changed and implement those edits

-   The existing scripts also include plenty of examples of heading formatting, font changes, and hyperlinks so use the existing pages to teach yourself how to do things you don’t already know how to do

3.  Once you’ve made the edits, go to the “Build” tab on R Studio

-   On my R Studio that tab is in the bottom right but I am not sure if this is the default location for that tab so you may need to hunt around

4.  In the Build tab, click “Build Website”

-   This will take several minutes to process (there will be a running list of code as it processes through each .Rmd file) so feel free to grab a cup of coffee as this processes

5.  Once it completes, it will create a new tab and will pop up the new website in your browser **but you are not yet done**!

6.  Once that is done, in the Git tab of R Studio, select all modified files (not just the scripts!) and commit/push them all

-   Building the website may affect a lot of files in the “libs” folder deep in your system (you can tell how savvy I am about this, huh?) and these changes must also be included in the push for the website to successfully update

7.  Once you’ve pushed these changes (and if you’re working in a fork, Will has accepted your pull request) the website on the internet should update within 10-15 minutes so double check your work after roughly that amount of time has passed
